name: Deploy to AWS S3 and CloudFront

on: 
  workflow_dispatch: # Keep manual trigger
  schedule:
    - cron: '0 6 * * *' # Run daily at 6 AM UTC

env:
  NODE_VERSION: "18"
  MEDIUM_FEED_URL: https://medium.com/feed/@danduh
  TALKS_URL: https://sessionize.com/api/speaker/json/h2ty3m9boh

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "portfolio/package-lock.json"

      - name: Install dependencies
        run: |
          cd portfolio
          npm ci

      - name: Build Docusaurus site
        run: |
          cd portfolio
          npm run loadData
          npm run build
        env:
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
          YT_PLAYLIST_ID: ${{ secrets.YT_PLAYLIST_ID }}
          MEDIUM_FEED_URL: ${{ env.MEDIUM_FEED_URL }}
          TALKS_URL: ${{ env.TALKS_URL }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy to S3
        run: |
          cd portfolio
          aws s3 sync build/ s3://${{ vars.S3_BUCKET_NAME }} --delete --exact-timestamps
        env:
          AWS_S3_BUCKET: ${{ vars.S3_BUCKET_NAME }}

      - name: Invalidate CloudFront distribution
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}

      - name: Display deployment info
        run: |
          echo "üöÄ Deployment completed!"
          echo "üì¶ S3 Bucket: ${{ vars.S3_BUCKET_NAME }}"
          echo "üåê CloudFront Distribution: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}"
